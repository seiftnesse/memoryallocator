name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build 
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}} 
          -DBUILD_TESTS=ON 
          -DCMAKE_CXX_STANDARD=17

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}} --output-on-failure

      - name: Print Error Details
        if: failure()
        run: cat ${{github.workspace}}/build/CMakeFiles/CMakeError.log || true

  valgrind:
    name: Valgrind Memory Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Valgrind
        run: sudo apt-get update && sudo apt-get install -y valgrind

      - name: Configure CMake
        run: >
          cmake -B ${{github.workspace}}/build 
          -DCMAKE_BUILD_TYPE=Debug 
          -DBUILD_TESTS=ON 
          -DCMAKE_CXX_STANDARD=17

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Debug

      - name: Run Valgrind on Test Executables
        working-directory: ${{github.workspace}}/build
        run: |
          # Only run Valgrind on actual test executables in tests directory
          find ./tests -type f -executable -not -path "*/\.*" | while read executable; do
            if [ -x "$executable" ] && [ -f "$executable" ]; then
              echo "Running Valgrind on $executable"
              valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --error-exitcode=1 "$executable"
            fi
          done

      - name: Print Error Details
        if: failure()
        run: cat ${{github.workspace}}/build/CMakeFiles/CMakeError.log || true